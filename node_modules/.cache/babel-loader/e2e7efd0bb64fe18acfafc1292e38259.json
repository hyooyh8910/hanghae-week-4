{"ast":null,"code":"// words.js\n// Actions\nconst CREATE = \"words/CREATE\"; //추가하기\n\nconst initialState = {\n  list: [\"단어\", \"설명\", \"예시\"]\n}; //이거 이렇게 하는 거 맞냐..\n// const LOAD = 'my-app/words/LOAD';//서버에서 가지고 올떄\n// const UPDATE = 'my-app/words/UPDATE';\n// const REMOVE = 'my-app/words/REMOVE';\n// Action Creators\n\nexport function createwords(words) {\n  return {\n    type: CREATE,\n    words\n  };\n} // export function loadWidgets() {\n// return { type: LOAD };\n// }\n// export function createWidget(widget) {\n// return { type: CREATE, widget };\n// }\n// export function updateWidget(widget) {\n// return { type: UPDATE, widget };\n// }\n// export function removeWidget(widget) {\n// return { type: REMOVE, widget };\n// }\n// Reducer\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case \"words/CREATE\":\n      {\n        const new_word_list = [...state.list, action.words];\n        return {\n          list: new_word_list\n        };\n      }\n\n    default:\n      return state;\n  }\n} // side effects, only as applicable\n// e.g. thunks, epics, etc\n// export function getWidget () {\n// return dispatch => get('/widget').then(widget => dispatch(updateWidget(widget)))\n// }","map":{"version":3,"names":["CREATE","initialState","list","createwords","words","type","reducer","state","action","new_word_list"],"sources":["/Users/hyori/Desktop/study/sparta/week4/homework_w4/hwdo_4/src/redux/module/words.js"],"sourcesContent":["// words.js\n\n// Actions\nconst CREATE = \"words/CREATE\";//추가하기\n\nconst initialState = {\n    list: [(\"단어\": 1),(\"설명\": 2),(\"예시\": 3) ]\n};//이거 이렇게 하는 거 맞냐..\n\n// const LOAD = 'my-app/words/LOAD';//서버에서 가지고 올떄\n// const UPDATE = 'my-app/words/UPDATE';\n// const REMOVE = 'my-app/words/REMOVE';\n\n\n\n// Action Creators\nexport function createwords(words) {\n    return { type: CREATE, words };\n}\n\n// export function loadWidgets() {\n// return { type: LOAD };\n// }\n\n// export function createWidget(widget) {\n// return { type: CREATE, widget };\n// }\n\n// export function updateWidget(widget) {\n// return { type: UPDATE, widget };\n// }\n\n// export function removeWidget(widget) {\n// return { type: REMOVE, widget };\n// }\n\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case \"words/CREATE\": {\n            const new_word_list = [...state.list, action.words];\n            return { list: new_word_list };\n        }\n        default: return state;\n    }\n}\n\n\n\n// side effects, only as applicable\n// e.g. thunks, epics, etc\n// export function getWidget () {\n// return dispatch => get('/widget').then(widget => dispatch(updateWidget(widget)))\n// }"],"mappings":"AAAA;AAEA;AACA,MAAMA,MAAM,GAAG,cAAf,C,CAA8B;;AAE9B,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,CAAE,IAAF,EAAY,IAAZ,EAAsB,IAAtB;AADW,CAArB,C,CAEE;AAEF;AACA;AACA;AAIA;;AACA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAC/B,OAAO;IAAEC,IAAI,EAAEL,MAAR;IAAgBI;EAAhB,CAAP;AACH,C,CAED;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;;AACA,eAAe,SAASE,OAAT,GAAoD;EAAA,IAAnCC,KAAmC,uEAA3BN,YAA2B;EAAA,IAAbO,MAAa,uEAAJ,EAAI;;EAC/D,QAAQA,MAAM,CAACH,IAAf;IACI,KAAK,cAAL;MAAqB;QACjB,MAAMI,aAAa,GAAG,CAAC,GAAGF,KAAK,CAACL,IAAV,EAAgBM,MAAM,CAACJ,KAAvB,CAAtB;QACA,OAAO;UAAEF,IAAI,EAAEO;QAAR,CAAP;MACH;;IACD;MAAS,OAAOF,KAAP;EALb;AAOH,C,CAID;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}