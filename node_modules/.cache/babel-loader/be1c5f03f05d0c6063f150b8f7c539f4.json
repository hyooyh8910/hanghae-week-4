{"ast":null,"code":"import _toConsumableArray from\"/Users/hyori/Desktop/study/sparta/week4/homework_w4/hwdo_4/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";// words.js\n// Actions\nvar CREATE=\"words/CREATE\";//추가하기\nvar initialState={list:[\"단어\",\"설명\",\"예시\"]};//이거 이렇게 하는 거 맞냐..\n// const LOAD = 'my-app/words/LOAD';//서버에서 가지고 올떄\n// const UPDATE = 'my-app/words/UPDATE';\n// const REMOVE = 'my-app/words/REMOVE';\n// Action Creators\nexport function createwords(words){return{type:CREATE,words:words};}// export function loadWidgets() {\n// return { type: LOAD };\n// }\n// export function createWidget(widget) {\n// return { type: CREATE, widget };\n// }\n// export function updateWidget(widget) {\n// return { type: UPDATE, widget };\n// }\n// export function removeWidget(widget) {\n// return { type: REMOVE, widget };\n// }\n// Reducer\nexport default function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};switch(action.type){case\"words/CREATE\":{var new_word_list=[].concat(_toConsumableArray(state.list),[action.words]);return{list:new_word_list};}default:return state;}};// side effects, only as applicable\n// e.g. thunks, epics, etc\n// export function getWidget () {\n// return dispatch => get('/widget').then(widget => dispatch(updateWidget(widget)))\n// }","map":{"version":3,"names":["CREATE","initialState","list","createwords","words","type","reducer","state","action","new_word_list"],"sources":["/Users/hyori/Desktop/study/sparta/week4/homework_w4/hwdo_4/src/redux/module/words.js"],"sourcesContent":["// words.js\n\n// Actions\nconst CREATE = \"words/CREATE\";//추가하기\n\nconst initialState = {\n    list: [(\"단어\": 1),(\"설명\": 2),(\"예시\": 3) ]\n};//이거 이렇게 하는 거 맞냐..\n\n// const LOAD = 'my-app/words/LOAD';//서버에서 가지고 올떄\n// const UPDATE = 'my-app/words/UPDATE';\n// const REMOVE = 'my-app/words/REMOVE';\n\n\n\n// Action Creators\nexport function createwords(words) {\n    return { type: CREATE, words };\n}\n\n// export function loadWidgets() {\n// return { type: LOAD };\n// }\n\n// export function createWidget(widget) {\n// return { type: CREATE, widget };\n// }\n\n// export function updateWidget(widget) {\n// return { type: UPDATE, widget };\n// }\n\n// export function removeWidget(widget) {\n// return { type: REMOVE, widget };\n// }\n\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case \"words/CREATE\": {\n            const new_word_list = [...state.list, action.words];\n            return { list: new_word_list };\n        }\n        default: return state;\n    }\n};\n\n\n\n// side effects, only as applicable\n// e.g. thunks, epics, etc\n// export function getWidget () {\n// return dispatch => get('/widget').then(widget => dispatch(updateWidget(widget)))\n// }"],"mappings":"wJAAA;AAEA;AACA,GAAMA,OAAM,CAAG,cAAf,CAA8B;AAE9B,GAAMC,aAAY,CAAG,CACjBC,IAAI,CAAE,CAAE,IAAF,CAAY,IAAZ,CAAsB,IAAtB,CADW,CAArB,CAEE;AAEF;AACA;AACA;AAIA;AACA,MAAO,SAASC,YAAT,CAAqBC,KAArB,CAA4B,CAC/B,MAAO,CAAEC,IAAI,CAAEL,MAAR,CAAgBI,KAAK,CAALA,KAAhB,CAAP,CACH,CAED;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA,cAAe,SAASE,QAAT,EAAoD,IAAnCC,MAAmC,2DAA3BN,YAA2B,IAAbO,OAAa,2DAAJ,EAAI,CAC/D,OAAQA,MAAM,CAACH,IAAf,EACI,IAAK,cAAL,CAAqB,CACjB,GAAMI,cAAa,8BAAOF,KAAK,CAACL,IAAb,GAAmBM,MAAM,CAACJ,KAA1B,EAAnB,CACA,MAAO,CAAEF,IAAI,CAAEO,aAAR,CAAP,CACH,CACD,QAAS,MAAOF,MAAP,CALb,CAOH,EAID;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}