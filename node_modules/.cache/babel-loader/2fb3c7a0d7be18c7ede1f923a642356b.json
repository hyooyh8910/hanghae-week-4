{"ast":null,"code":"var _jsxFileName = \"/Users/hyori/Desktop/study/sparta/week4/homework_w4/hw_4/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { db } from \"./firebase\"; // components\n\nimport Home from \"./Home\";\nimport FormPage from \"./FormPage\";\nimport Header from \"./Header\"; // style\n\nimport GlobalStyles from \"./GlobalStyles\";\nimport theme from \"./theme\"; // redux\n\nimport { loadWordsFB } from \"./redux/module/words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch(); // App.js가 새로 렌더될 때마다(진입, 새로고침) loadWordsFB 함수를 dispatch 합니다.\n\n  useEffect(() => {\n    dispatch(loadWordsFB());\n  }, [dispatch]);\n  return (\n    /*#__PURE__*/\n    // ThemeProvider를 활용하면 theme을 사용할 수 있습니다:)\n    _jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              component: Home\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/word/add\",\n              component: FormPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/word/:id/edit\",\n              component: FormPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nconst Container = styled.div`\n  margin-top: 40px;\n  padding: 0 30px;\n\n  // theme.js에서 지정한 문자열을 이용 - @media screen and (min-width: 768px) {} 와 같은 뜻이 됩니다.\n  // 짧게 쓰고 유지보수성을 높이기 위해 theme으로 등록했습니다.\n  ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.device.tablet;\n}} {\n    margin-top: 60px;\n    padding: 0 50px;\n  }\n\n  ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.device.desktop;\n}} {\n    max-width: 1400px;\n    margin: 60px auto 0 auto;\n  }\n`;\n_c2 = Container;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","styled","ThemeProvider","useDispatch","Switch","Route","db","Home","FormPage","Header","GlobalStyles","theme","loadWordsFB","App","dispatch","Container","div","device","tablet","desktop"],"sources":["/Users/hyori/Desktop/study/sparta/week4/homework_w4/hw_4/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport {db} from \"./firebase\";\n\n// components\nimport Home from \"./Home\";\nimport FormPage from \"./FormPage\";\nimport Header from \"./Header\";\n\n// style\nimport GlobalStyles from \"./GlobalStyles\";\nimport theme from \"./theme\";\n\n// redux\nimport { loadWordsFB } from \"./redux/module/words\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  // App.js가 새로 렌더될 때마다(진입, 새로고침) loadWordsFB 함수를 dispatch 합니다.\n  useEffect(() => {\n    dispatch(loadWordsFB());\n  }, [dispatch]);\n  return (\n    // ThemeProvider를 활용하면 theme을 사용할 수 있습니다:)\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <GlobalStyles />\n        <Header />\n        <Container>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/word/add\" component={FormPage} />\n            <Route path=\"/word/:id/edit\" component={FormPage} />\n          </Switch>\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nconst Container = styled.div`\n  margin-top: 40px;\n  padding: 0 30px;\n\n  // theme.js에서 지정한 문자열을 이용 - @media screen and (min-width: 768px) {} 와 같은 뜻이 됩니다.\n  // 짧게 쓰고 유지보수성을 높이기 위해 theme으로 등록했습니다.\n  ${({ theme }) => theme.device.tablet} {\n    margin-top: 60px;\n    padding: 0 50px;\n  }\n\n  ${({ theme }) => theme.device.desktop} {\n    max-width: 1400px;\n    margin: 60px auto 0 auto;\n  }\n`;\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAAQC,EAAR,QAAiB,YAAjB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAGX,WAAW,EAA5B,CADa,CAGb;;EACAH,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACF,WAAW,EAAZ,CAAR;EACD,CAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;EAGA;IAAA;IACE;IACA,QAAC,aAAD;MAAe,KAAK,EAAEH,KAAtB;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,wBACE,QAAC,YAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,SAAD;UAAA,uBACE,QAAC,MAAD;YAAA,wBACE,QAAC,KAAD;cAAO,IAAI,EAAC,GAAZ;cAAgB,KAAK,MAArB;cAAsB,SAAS,EAAEJ;YAAjC;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,KAAD;cAAO,IAAI,EAAC,WAAZ;cAAwB,SAAS,EAAEC;YAAnC;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE,QAAC,KAAD;cAAO,IAAI,EAAC,gBAAZ;cAA6B,SAAS,EAAEA;YAAxC;cAAA;cAAA;cAAA;YAAA,QAHF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFF;AAgBD;;GAvBQK,G;UACUV,W;;;KADVU,G;AAyBT,MAAME,SAAS,GAAGd,MAAM,CAACe,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,IAAI;EAAA,IAAC;IAAEL;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACM,MAAN,CAAaC,MAA5B;AAAA,CAAmC;AACvC;AACA;AACA;AACA;AACA,IAAI;EAAA,IAAC;IAAEP;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACM,MAAN,CAAaE,OAA5B;AAAA,CAAoC;AACxC;AACA;AACA;AACA,CAfA;MAAMJ,S;AAiBN,eAAeF,GAAf"},"metadata":{},"sourceType":"module"}